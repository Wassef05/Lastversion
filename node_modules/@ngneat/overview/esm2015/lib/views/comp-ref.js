export class CompRef {
    constructor(args) {
        this.args = args;
        const factory = this.args.resolver.resolveComponentFactory(this.args.component);
        if (this.args.vcr) {
            this.compRef = this.args.vcr.createComponent(factory, this.args.vcr.length, args.injector || this.args.vcr.injector);
            this.detectChanges();
        }
        else {
            this.compRef = factory.create(this.args.injector);
            this.args.appRef.attachView(this.compRef.hostView);
        }
    }
    get ref() {
        return this.compRef;
    }
    setInput(input, value) {
        this.compRef.instance[input] = value;
        return this;
    }
    setInputs(inputs) {
        Object.keys(inputs).forEach((input) => {
            this.compRef.instance[input] = inputs[input];
        });
        return this;
    }
    detectChanges() {
        this.compRef.hostView.detectChanges();
        return this;
    }
    appendTo(container) {
        container.appendChild(this.getElement());
        return this;
    }
    removeFrom(container) {
        container.removeChild(this.getElement());
        return this;
    }
    getRawContent() {
        return this.getElement().outerHTML;
    }
    getElement() {
        return this.compRef.location.nativeElement;
    }
    destroy() {
        this.compRef.destroy();
        !this.args.vcr && this.args.appRef.detachView(this.compRef.hostView);
        this.compRef = null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcC1yZWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ25lYXQvb3ZlcnZpZXcvc3JjL2xpYi92aWV3cy9jb21wLXJlZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQkEsTUFBTSxPQUFPLE9BQU87SUFHbEIsWUFBb0IsSUFBYTtRQUFiLFNBQUksR0FBSixJQUFJLENBQVM7UUFDL0IsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsdUJBQXVCLENBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNuRixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUMxQyxPQUFPLEVBQ1AsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUNwQixJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FDeEMsQ0FBQztZQUNGLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztTQUN0QjthQUFNO1lBQ0wsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDbEQsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDcEQ7SUFDSCxDQUFDO0lBRUQsSUFBSSxHQUFHO1FBQ0wsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxRQUFRLENBQXNDLEtBQVEsRUFBRSxLQUFXO1FBQ2pFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUVyQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxTQUFTLENBQUMsTUFBb0M7UUFDNUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtZQUNwQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0MsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxhQUFhO1FBQ1gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDdEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsUUFBUSxDQUFDLFNBQWtCO1FBQ3pCLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7UUFFekMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsVUFBVSxDQUFDLFNBQWtCO1FBQzNCLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7UUFFekMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsYUFBYTtRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLFNBQVMsQ0FBQztJQUNyQyxDQUFDO0lBRUQsVUFBVTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDO0lBQzdDLENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN2QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ3RCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFwcGxpY2F0aW9uUmVmLFxuICBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gIENvbXBvbmVudFJlZixcbiAgSW5qZWN0b3IsXG4gIFR5cGUsXG4gIFZpZXdDb250YWluZXJSZWYsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRXhjbHVkZUZ1bmN0aW9ucywgVmlld1JlZiB9IGZyb20gJy4vdHlwZXMnO1xuXG5pbnRlcmZhY2UgQXJnczxDPiB7XG4gIGNvbXBvbmVudDogVHlwZTxDPjtcbiAgaW5qZWN0b3I6IEluamVjdG9yO1xuICByZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyO1xuICB2Y3I6IFZpZXdDb250YWluZXJSZWYgfCB1bmRlZmluZWQ7XG4gIGFwcFJlZjogQXBwbGljYXRpb25SZWYgfCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBjbGFzcyBDb21wUmVmPFQ+IGltcGxlbWVudHMgVmlld1JlZiB7XG4gIHByaXZhdGUgY29tcFJlZjogQ29tcG9uZW50UmVmPFQ+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYXJnczogQXJnczxUPikge1xuICAgIGNvbnN0IGZhY3RvcnkgPSB0aGlzLmFyZ3MucmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3Rvcnk8VD4odGhpcy5hcmdzLmNvbXBvbmVudCk7XG4gICAgaWYgKHRoaXMuYXJncy52Y3IpIHtcbiAgICAgIHRoaXMuY29tcFJlZiA9IHRoaXMuYXJncy52Y3IuY3JlYXRlQ29tcG9uZW50KFxuICAgICAgICBmYWN0b3J5LFxuICAgICAgICB0aGlzLmFyZ3MudmNyLmxlbmd0aCxcbiAgICAgICAgYXJncy5pbmplY3RvciB8fCB0aGlzLmFyZ3MudmNyLmluamVjdG9yXG4gICAgICApO1xuICAgICAgdGhpcy5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY29tcFJlZiA9IGZhY3RvcnkuY3JlYXRlKHRoaXMuYXJncy5pbmplY3Rvcik7XG4gICAgICB0aGlzLmFyZ3MuYXBwUmVmLmF0dGFjaFZpZXcodGhpcy5jb21wUmVmLmhvc3RWaWV3KTtcbiAgICB9XG4gIH1cblxuICBnZXQgcmVmKCkge1xuICAgIHJldHVybiB0aGlzLmNvbXBSZWY7XG4gIH1cblxuICBzZXRJbnB1dDxLIGV4dGVuZHMga2V5b2YgRXhjbHVkZUZ1bmN0aW9uczxUPj4oaW5wdXQ6IEssIHZhbHVlOiBUW0tdKSB7XG4gICAgdGhpcy5jb21wUmVmLmluc3RhbmNlW2lucHV0XSA9IHZhbHVlO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBzZXRJbnB1dHMoaW5wdXRzOiBQYXJ0aWFsPEV4Y2x1ZGVGdW5jdGlvbnM8VD4+KSB7XG4gICAgT2JqZWN0LmtleXMoaW5wdXRzKS5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5jb21wUmVmLmluc3RhbmNlW2lucHV0XSA9IGlucHV0c1tpbnB1dF07XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGRldGVjdENoYW5nZXMoKSB7XG4gICAgdGhpcy5jb21wUmVmLmhvc3RWaWV3LmRldGVjdENoYW5nZXMoKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGFwcGVuZFRvKGNvbnRhaW5lcjogRWxlbWVudCkge1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLmdldEVsZW1lbnQoKSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHJlbW92ZUZyb20oY29udGFpbmVyOiBFbGVtZW50KSB7XG4gICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKHRoaXMuZ2V0RWxlbWVudCgpKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZ2V0UmF3Q29udGVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRFbGVtZW50KCkub3V0ZXJIVE1MO1xuICB9XG5cbiAgZ2V0RWxlbWVudDxUIGV4dGVuZHMgRWxlbWVudD4oKTogVCB7XG4gICAgcmV0dXJuIHRoaXMuY29tcFJlZi5sb2NhdGlvbi5uYXRpdmVFbGVtZW50O1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLmNvbXBSZWYuZGVzdHJveSgpO1xuICAgICF0aGlzLmFyZ3MudmNyICYmIHRoaXMuYXJncy5hcHBSZWYuZGV0YWNoVmlldyh0aGlzLmNvbXBSZWYuaG9zdFZpZXcpO1xuICAgIHRoaXMuY29tcFJlZiA9IG51bGw7XG4gIH1cbn1cbiJdfQ==