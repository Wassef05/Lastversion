(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@ngneat/overview'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@ngneat/hot-toast', ['exports', '@angular/common', '@angular/core', '@ngneat/overview', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ngneat = global.ngneat || {}, global.ngneat['hot-toast'] = {}), global.ng.common, global.ng.core, global.i1, global.rxjs, global.rxjs.operators));
}(this, (function (exports, common, i0, i1, rxjs, operators) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var HOT_TOAST_DEFAULT_TIMEOUTS = {
        blank: 4000,
        error: 4000,
        success: 4000,
        loading: 30000,
        warning: 4000,
        info: 4000,
    };
    var EXIT_ANIMATION_DURATION = 800;
    var ENTER_ANIMATION_DURATION = 350;
    var HOT_TOAST_MARGIN = 8;

    var HotToastRef = /** @class */ (function () {
        function HotToastRef(toast) {
            this.toast = toast;
            /** Subject for notifying the user that the toast has been closed. */
            this._onClosed = new rxjs.Subject();
        }
        Object.defineProperty(HotToastRef.prototype, "dispose", {
            set: function (value) {
                this._dispose = value;
            },
            enumerable: false,
            configurable: true
        });
        HotToastRef.prototype.getToast = function () {
            return this.toast;
        };
        /**Used for internal purpose
         * Attach ToastRef to container
         */
        HotToastRef.prototype.appendTo = function (container) {
            var _a = container.addToast(this), dispose = _a.dispose, updateMessage = _a.updateMessage, updateToast = _a.updateToast, afterClosed = _a.afterClosed;
            this.dispose = dispose;
            this.updateMessage = updateMessage;
            this.updateToast = updateToast;
            this.afterClosed = rxjs.race(this._onClosed.asObservable(), afterClosed);
            return this;
        };
        /**
         * Closes the toast
         *
         * @param [closeData={ dismissedByAction: false }] -
         * Make sure to pass { dismissedByAction: true } when closing from template
         * @memberof HotToastRef
         */
        HotToastRef.prototype.close = function (closeData) {
            if (closeData === void 0) { closeData = { dismissedByAction: false }; }
            this._dispose();
            this._onClosed.next({ dismissedByAction: closeData.dismissedByAction, id: this.toast.id });
            this._onClosed.complete();
        };
        Object.defineProperty(HotToastRef.prototype, "data", {
            get: function () {
                return this.toast.data;
            },
            enumerable: false,
            configurable: true
        });
        return HotToastRef;
    }());

    var animate = function (element, value) {
        element.style.animation = value;
    };

    var HotToastComponent = /** @class */ (function () {
        function HotToastComponent(injector, renderer, ngZone) {
            this.injector = injector;
            this.renderer = renderer;
            this.ngZone = ngZone;
            this.offset = 0;
            this.height = new i0.EventEmitter();
            this.beforeClosed = new i0.EventEmitter();
            this.afterClosed = new i0.EventEmitter();
            this.isManualClose = false;
            this.unlisteners = [];
        }
        HotToastComponent.prototype.ngOnInit = function () {
            if (i1.isTemplateRef(this.toast.message)) {
                this.context = { $implicit: this.toastRef };
            }
            if (i1.isComponent(this.toast.message)) {
                this.toastComponentInjector = i0.Injector.create({
                    providers: [
                        {
                            provide: HotToastRef,
                            useValue: this.toastRef,
                        },
                    ],
                    parent: this.toast.injector || this.injector,
                });
            }
        };
        HotToastComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            var nativeElement = this.toastBarBase.nativeElement;
            // Caretaker note: accessing `offsetHeight` triggers the whole layout update.
            // Macro tasks (like `setTimeout`) might be executed within the current rendering frame and cause a frame drop.
            requestAnimationFrame(function () {
                _this.height.emit(nativeElement.offsetHeight);
            });
            // Caretaker note: `animationstart` and `animationend` events are event tasks that trigger change detection.
            // We'd want to trigger the change detection only if it's an exit animation.
            this.ngZone.runOutsideAngular(function () {
                _this.unlisteners.push(
                // Caretaker note: we have to remove these event listeners at the end (even if the element is removed from DOM).
                // zone.js stores its `ZoneTask`s within the `nativeElement[Zone.__symbol__('animationstart') + 'false']` property
                // with callback that capture `this`.
                _this.renderer.listen(nativeElement, 'animationstart', function (event) {
                    if (_this.isExitAnimation(event)) {
                        _this.ngZone.run(function () { return _this.beforeClosed.emit(); });
                    }
                }), _this.renderer.listen(nativeElement, 'animationend', function (event) {
                    if (_this.isExitAnimation(event)) {
                        _this.ngZone.run(function () { return _this.afterClosed.emit({ dismissedByAction: _this.isManualClose, id: _this.toast.id }); });
                    }
                }));
            });
            this.setToastAttributes();
        };
        Object.defineProperty(HotToastComponent.prototype, "containerPositionStyle", {
            get: function () {
                var top = this.toast.position.includes('top');
                var verticalStyle = top ? { top: 0 } : { bottom: 0 };
                var horizontalStyle = this.toast.position.includes('left')
                    ? {
                        left: 0,
                    }
                    : this.toast.position.includes('right')
                        ? {
                            right: 0,
                        }
                        : {
                            left: 0,
                            right: 0,
                            justifyContent: 'center',
                        };
                return Object.assign(Object.assign({ transform: "translateY(" + this.offset * (top ? 1 : -1) + "px)" }, verticalStyle), horizontalStyle);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HotToastComponent.prototype, "toastBarBaseStyles", {
            get: function () {
                var top = this.toast.position.includes('top');
                var enterAnimation = "hotToastEnterAnimation" + (top ? 'Negative' : 'Positive') + " " + ENTER_ANIMATION_DURATION + "ms cubic-bezier(0.21, 1.02, 0.73, 1) forwards";
                var exitAnimation = "hotToastExitAnimation" + (top ? 'Negative' : 'Positive') + " " + EXIT_ANIMATION_DURATION + "ms forwards cubic-bezier(0.06, 0.71, 0.55, 1) " + this.toast.duration + "ms";
                var animation = this.toast.autoClose ? enterAnimation + ", " + exitAnimation : enterAnimation;
                return Object.assign(Object.assign({}, this.toast.style), { animation: animation });
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HotToastComponent.prototype, "isIconString", {
            get: function () {
                return typeof this.toast.icon === 'string';
            },
            enumerable: false,
            configurable: true
        });
        HotToastComponent.prototype.close = function () {
            this.isManualClose = true;
            var top = this.toast.position.includes('top');
            var exitAnimation = "hotToastExitAnimation" + (top ? 'Negative' : 'Positive') + " " + EXIT_ANIMATION_DURATION + "ms forwards cubic-bezier(0.06, 0.71, 0.55, 1)";
            var nativeElement = this.toastBarBase.nativeElement;
            animate(nativeElement, exitAnimation);
        };
        HotToastComponent.prototype.ngOnDestroy = function () {
            this.close();
            while (this.unlisteners.length) {
                this.unlisteners.pop()();
            }
        };
        HotToastComponent.prototype.isExitAnimation = function (ev) {
            return ev.animationName.includes('hotToastExitAnimation');
        };
        HotToastComponent.prototype.setToastAttributes = function () {
            var e_1, _a;
            var toastAttributes = this.toast.attributes;
            try {
                for (var _b = __values(Object.entries(toastAttributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
                    this.renderer.setAttribute(this.toastBarBase.nativeElement, key, value);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        };
        return HotToastComponent;
    }());
    HotToastComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'hot-toast',
                    template: "<div\n  class=\"hot-toast-bar-base-container\"\n  [ngStyle]=\"containerPositionStyle\"\n  [ngClass]=\"'hot-toast-theme-' + toast.theme\"\n>\n  <div\n    class=\"hot-toast-bar-base\"\n    #hotToastBarBase\n    [ngStyle]=\"toastBarBaseStyles\"\n    [ngClass]=\"toast.className\"\n    [style.--hot-toast-animation-state]=\"isManualClose ? 'running' : 'paused'\"\n    [attr.aria-live]=\"toast.ariaLive\"\n    [attr.role]=\"toast.role\"\n  >\n    <div class=\"hot-toast-icon\" aria-hidden=\"true\">\n      <ng-container *ngIf=\"toast.icon !== undefined; else indicator\">\n        <ng-container *ngIf=\"isIconString; else iconTemplateOrComponent\">\n          <hot-toast-animated-icon [iconTheme]=\"toast.iconTheme\">{{ toast.icon }}</hot-toast-animated-icon>\n        </ng-container>\n        <ng-template #iconTemplateOrComponent>\n          <div>\n            <ng-container [dynamicView]=\"toast.icon\"></ng-container>\n          </div>\n        </ng-template>\n      </ng-container>\n\n      <ng-template #indicator>\n        <hot-toast-indicator [theme]=\"toast.iconTheme\" [type]=\"toast.type\"></hot-toast-indicator>\n      </ng-template>\n    </div>\n\n    <div class=\"hot-toast-message\">\n      <div>\n        <ng-container *dynamicView=\"toast.message; context: context; injector: toastComponentInjector\"></ng-container>\n      </div>\n    </div>\n\n    <button\n      *ngIf=\"toast.dismissible\"\n      (click)=\"close()\"\n      type=\"button\"\n      class=\"hot-toast-close-btn\"\n      aria-label=\"Close\"\n      [ngStyle]=\"toast.closeStyle\"\n    ></button>\n  </div>\n</div>\n",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    styles: [".hot-toast-bar-base{align-items:var(--hot-toast-align-items,center);background-color:var(--hot-toast-bg,#fff);border-radius:var(--hot-toast-border-radius,4px);box-shadow:var(--hot-toast-shadow,0 3px 10px rgba(0,0,0,.1),0 3px 3px rgba(0,0,0,.05));color:var(--hot-toast-color,#363636);display:var(--hot-toast-display,flex);line-height:var(--hot-toast-line,1.3);margin:var(--hot-toast-margin,16px);max-width:var(--hot-toast-max-width,350px);padding:var(--hot-toast-padding,8px 10px);pointer-events:var(--hot-toast-pointer-events,auto);width:var(--hot-toast-width,-webkit-fit-content);width:var(--hot-toast-width,-moz-fit-content);width:var(--hot-toast-width,fit-content);will-change:var(--hot-toast-will-change,transform)}.hot-toast-bar-base:focus,.hot-toast-bar-base:hover{animation-play-state:var(--hot-toast-animation-state,paused)!important}@media (prefers-reduced-motion:reduce){.hot-toast-bar-base{animation-duration:var(--hot-toast-reduced-motion-animation-duration,10ms)!important}}.hot-toast-message{color:var(--hot-toast-message-color,inherit);display:var(--hot-toast-message-display,flex);flex:var(--hot-toast-message-flex,1);justify-content:var(--hot-toast-message-justify-content,center);margin:var(--hot-toast-message-margin,4px 10px)}.hot-toast-bar-base-container{display:var(--hot-toast-container-display,flex);pointer-events:var(--hot-toast-container-pointer-events,none);position:var(--hot-toast-container-position,absolute);transition:var(--hot-toast-container-transition,transform .23s cubic-bezier(.21,1.02,.73,1))}@media (prefers-reduced-motion:reduce){.hot-toast-bar-base-container{transition-duration:var(--hot-toast-container-reduced-motion-transition-duration,10ms)!important}}.hot-toast-bar-base-container.hot-toast-theme-snackbar .hot-toast-bar-base{background:var(--hot-toast-snackbar-bg,#323232);box-shadow:var(--hot-toast-snackbar-shadow,0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12));color:var(--hot-toast-snackbar-color,#fff)}.hot-toast-bar-base-container.hot-toast-theme-snackbar .hot-toast-close-btn{filter:var(--hot-toast-snackbar-close-btn-filter,invert(1) grayscale(100%) brightness(200%))}@keyframes hotToastEnterAnimationNegative{0%{opacity:.5;transform:translate3d(0,-80px,0) scale(.6)}to{opacity:1;transform:translateZ(0) scale(1)}}@keyframes hotToastEnterAnimationPositive{0%{opacity:.5;transform:translate3d(0,80px,0) scale(.6)}to{opacity:1;transform:translateZ(0) scale(1)}}@keyframes hotToastExitAnimationPositive{0%{opacity:1;transform:translateZ(-1px) scale(1)}to{opacity:0;transform:translate3d(0,130px,-1px) scale(.5)}}@keyframes hotToastExitAnimationNegative{0%{opacity:1;transform:translateZ(-1px) scale(1)}to{opacity:0;transform:translate3d(0,-130px,-1px) scale(.5)}}.hot-toast-close-btn{align-self:var(--hot-toast-close-btn-align-self,flex-start);background-color:var(--hot-toast-close-btn-background-color,transparent);background-image:var(--hot-toast-close-btn-background-image,url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/%3e%3c/svg%3e\"));background-position:var(--hot-toast-close-btn-background-position,center);background-repeat:var(--hot-toast-close-btn-background-repeat,no-repeat);background-size:var(--hot-toast-close-btn-background-size,.75em);border:var(--hot-toast-close-btn-border,0);border-radius:var(--hot-toast-close-btn-border-radius,.25rem);box-sizing:var(--hot-toast-close-btn-box-sizing,content-box);display:var(--hot-toast-close-btn-display,flex);height:var(--hot-toast-close-btn-height,.8em);margin-top:var(--hot-toast-close-btn-margin-top,.25em);opacity:var(--hot-toast-close-btn-opacity,.5);padding:var(--hot-toast-close-btn-padding,.25em);width:var(--hot-toast-close-btn-width,.8em)}.hot-toast-close-btn:focus{box-shadow:var(--hot-toast-close-btn-box-shadow,0 0 0 .125rem rgba(13,110,253,.25));outline:var(--hot-toast-close-btn-outline,none)}.hot-toast-close-btn:focus,.hot-toast-close-btn:hover{opacity:var(--hot-toast-close-btn-opacity,.75)}.hot-toast-icon{align-self:var(--hot-toast-icon-align-self,flex-start);padding-top:var(--hot-toast-icon-padding-top,.25em)}"]
                },] }
    ];
    HotToastComponent.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i0.Renderer2 },
        { type: i0.NgZone }
    ]; };
    HotToastComponent.propDecorators = {
        toast: [{ type: i0.Input }],
        offset: [{ type: i0.Input }],
        defaultConfig: [{ type: i0.Input }],
        toastRef: [{ type: i0.Input }],
        height: [{ type: i0.Output }],
        beforeClosed: [{ type: i0.Output }],
        afterClosed: [{ type: i0.Output }],
        toastBarBase: [{ type: i0.ViewChild, args: ['hotToastBarBase',] }]
    };

    var HotToastContainerComponent = /** @class */ (function () {
        function HotToastContainerComponent(cdr) {
            this.cdr = cdr;
            this.toasts = [];
            this.toastRefs = [];
            /** Subject for notifying the user that the toast has been closed. */
            this._onClosed = new rxjs.Subject();
            this.onClosed$ = this._onClosed.asObservable();
        }
        HotToastContainerComponent.prototype.trackById = function (index, toast) {
            return toast.id;
        };
        HotToastContainerComponent.prototype.calculateOffset = function (toastId, position) {
            var visibleToasts = this.toasts.filter(function (t) { return t.visible && t.position === position; });
            var index = visibleToasts.findIndex(function (toast) { return toast.id === toastId; });
            var offset = index !== -1
                ? visibleToasts
                    .slice.apply(visibleToasts, __spread((this.defaultConfig.reverseOrder ? [index + 1] : [0, index]))).reduce(function (acc, t) { return acc + (t.height || 0) + HOT_TOAST_MARGIN; }, 0)
                : 0;
            return offset;
        };
        HotToastContainerComponent.prototype.updateHeight = function (height, toast) {
            toast.height = height;
            this.cdr.detectChanges();
        };
        HotToastContainerComponent.prototype.addToast = function (ref) {
            var _this = this;
            this.toastRefs.push(ref);
            var toast = ref.getToast();
            this.toasts.push(ref.getToast());
            this.cdr.detectChanges();
            return {
                dispose: function () {
                    _this.closeToast(toast.id);
                },
                updateMessage: function (message) {
                    toast.message = message;
                    _this.cdr.detectChanges();
                },
                updateToast: function (options) {
                    _this.updateToasts(toast, options);
                    _this.cdr.detectChanges();
                },
                afterClosed: this.getAfterClosed(toast),
            };
        };
        HotToastContainerComponent.prototype.closeToast = function (id) {
            if (id) {
                var comp = this.hotToastComponentList.find(function (item) { return item.toast.id === id; });
                if (comp) {
                    comp.close();
                }
            }
            else {
                this.hotToastComponentList.forEach(function (comp) { return comp.close(); });
            }
        };
        HotToastContainerComponent.prototype.beforeClosed = function (toast) {
            toast.visible = false;
        };
        HotToastContainerComponent.prototype.afterClosed = function (closeToast) {
            var toastIndex = this.toasts.findIndex(function (t) { return t.id === closeToast.id; });
            if (toastIndex > -1) {
                this._onClosed.next(closeToast);
                this.toasts = this.toasts.filter(function (t) { return t.id !== closeToast.id; });
                this.toastRefs = this.toastRefs.filter(function (t) { return t.getToast().id !== closeToast.id; });
                this.cdr.detectChanges();
            }
        };
        HotToastContainerComponent.prototype.hasToast = function (id) {
            return this.toasts.findIndex(function (t) { return t.id === id; }) > -1;
        };
        HotToastContainerComponent.prototype.getAfterClosed = function (toast) {
            return this.onClosed$.pipe(operators.filter(function (v) { return v.id === toast.id; }));
        };
        HotToastContainerComponent.prototype.updateToasts = function (toast, options) {
            this.toasts = this.toasts.map(function (t) { return (Object.assign(Object.assign({}, t), (t.id === toast.id && Object.assign(Object.assign({}, toast), options)))); });
        };
        return HotToastContainerComponent;
    }());
    HotToastContainerComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'hot-toast-container',
                    template: "<div style=\"position: fixed; z-index: 9999; top: 0; right: 0; bottom: 0; left: 0; pointer-events: none\">\n  <div style=\"position: relative; height: 100%\">\n    <hot-toast\n      *ngFor=\"let toast of toasts; trackBy: trackById; let i = index\"\n      [toast]=\"toast\"\n      [offset]=\"calculateOffset(toast.id, toast.position)\"\n      [toastRef]=\"toastRefs[i]\"\n      (height)=\"updateHeight($event, toast)\"\n      (beforeClosed)=\"beforeClosed(toast)\"\n      (afterClosed)=\"afterClosed($event)\"\n    ></hot-toast>\n  </div>\n</div>\n",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush
                },] }
    ];
    HotToastContainerComponent.ctorParameters = function () { return [
        { type: i0.ChangeDetectorRef }
    ]; };
    HotToastContainerComponent.propDecorators = {
        defaultConfig: [{ type: i0.Input }],
        hotToastComponentList: [{ type: i0.ViewChildren, args: [HotToastComponent,] }]
    };

    var ToastConfig = /** @class */ (function () {
        function ToastConfig() {
            /**
             * Sets the reverse order for hot-toast stacking
             *
             * @default false
             */
            this.reverseOrder = false;
            this.ariaLive = 'polite';
            this.role = 'status';
            this.position = 'top-center';
            this.autoClose = true;
            this.theme = 'toast';
            this.attributes = {};
            // key in ToastType
            this.success = { content: '' };
            this.error = { content: '' };
            this.loading = { content: '' };
            this.blank = { content: '' };
            this.warning = { content: '' };
        }
        return ToastConfig;
    }());
    var isFunction = function (valOrFunction) { return typeof valOrFunction === 'function'; };
    var ɵ0 = isFunction;
    var resolveValueOrFunction = function (valOrFunction, arg) { return isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction; };
    var ToastPersistConfig = /** @class */ (function () {
        function ToastPersistConfig() {
            /**
             *In which storage id vs. counts should be stored
             *
             * @type {('local' | 'session')}
             * @memberof ToastPersistConfig
             * @default 'local'
             */
            this.storage = 'local';
            /**
             *The key pattern to store object in storage. `${id}` in pattern is replaced with actual toast id.
             *
             * @type {('local' | 'session')}
             * @memberof ToastPersistConfig
             * @default 'ngneat/hottoast-${id}'
             */
            this.key = 'ngneat/hototast-${id}';
            /**
             *The number of toasts allowed to show.
             *
             * @memberof ToastPersistConfig
             * @default 1
             */
            this.count = 1;
            this.enabled = false;
        }
        return ToastPersistConfig;
    }());

    var HotToastService = /** @class */ (function () {
        function HotToastService(_viewService, platformId, config) {
            this._viewService = _viewService;
            this.platformId = platformId;
            this._isInitialized = false;
            this._defaultConfig = new ToastConfig();
            this._defaultPersistConfig = new ToastPersistConfig();
            if (config) {
                this._defaultConfig = Object.assign(Object.assign({}, this._defaultConfig), config);
            }
        }
        Object.defineProperty(HotToastService.prototype, "defaultConfig", {
            get: function () {
                return this._defaultConfig;
            },
            set: function (config) {
                this._defaultConfig = Object.assign(Object.assign({}, this._defaultConfig), config);
                if (this._componentRef) {
                    this._componentRef.setInput('defaultConfig', this._defaultConfig);
                }
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Opens up an hot-toast without any pre-configurations
         *
         * @param message The message to show in the hot-toast.
         * @param [options] Additional configuration options for the hot-toast.
         * @returns
         * @memberof HotToastService
         */
        HotToastService.prototype.show = function (message, options) {
            var toast = this.createToast(message || this._defaultConfig.blank.content, 'blank', Object.assign(Object.assign({}, this._defaultConfig), options));
            return toast;
        };
        /**
         * Opens up an hot-toast with pre-configurations for error state
         *
         * @param message The message to show in the hot-toast.
         * @param [options] Additional configuration options for the hot-toast.
         * @returns
         * @memberof HotToastService
         */
        HotToastService.prototype.error = function (message, options) {
            var _a;
            var toast = this.createToast(message || this._defaultConfig.error.content, 'error', Object.assign(Object.assign(Object.assign({}, this._defaultConfig), (_a = this._defaultConfig) === null || _a === void 0 ? void 0 : _a.error), options));
            return toast;
        };
        /**
         * Opens up an hot-toast with pre-configurations for success state
         *
         * @param message The message to show in the hot-toast.
         * @param [options] Additional configuration options for the hot-toast.
         * @returns
         * @memberof HotToastService
         */
        HotToastService.prototype.success = function (message, options) {
            var _a;
            var toast = this.createToast(message || this._defaultConfig.success.content, 'success', Object.assign(Object.assign(Object.assign({}, this._defaultConfig), (_a = this._defaultConfig) === null || _a === void 0 ? void 0 : _a.success), options));
            return toast;
        };
        /**
         * Opens up an hot-toast with pre-configurations for loading state
         *
         * @param message The message to show in the hot-toast.
         * @param [options] Additional configuration options for the hot-toast.
         * @returns
         * @memberof HotToastService
         */
        HotToastService.prototype.loading = function (message, options) {
            var _a;
            var toast = this.createToast(message || this._defaultConfig.loading.content, 'loading', Object.assign(Object.assign(Object.assign({}, this._defaultConfig), (_a = this._defaultConfig) === null || _a === void 0 ? void 0 : _a.loading), options));
            return toast;
        };
        /**
         * Opens up an hot-toast with pre-configurations for warning state
         *
         * @param message The message to show in the hot-toast.
         * @param [options] Additional configuration options for the hot-toast.
         * @returns
         * @memberof HotToastService
         */
        HotToastService.prototype.warning = function (message, options) {
            var _a;
            var toast = this.createToast(message || this._defaultConfig.warning.content, 'warning', Object.assign(Object.assign(Object.assign({}, this._defaultConfig), (_a = this._defaultConfig) === null || _a === void 0 ? void 0 : _a.warning), options));
            return toast;
        };
        /**
         * Opens up an hot-toast with pre-configurations for info state
         *
         * @param message The message to show in the hot-toast.
         * @param [options] Additional configuration options for the hot-toast.
         * @returns
         * @memberof HotToastService
         * @since 3.3.0
         */
        HotToastService.prototype.info = function (message, options) {
            var _a;
            var toast = this.createToast(message || this._defaultConfig.warning.content, 'info', Object.assign(Object.assign(Object.assign({}, this._defaultConfig), (_a = this._defaultConfig) === null || _a === void 0 ? void 0 : _a.warning), options));
            return toast;
        };
        /**
         *
         *  Opens up an hot-toast with pre-configurations for loading initially and then changes state based on messages
         *
         * @template T Type of observable
         * @param messages Messages for each state i.e. loading, success and error
         * @returns
         * @memberof HotToastService
         */
        HotToastService.prototype.observe = function (messages) {
            var _this = this;
            return function (source) {
                var _a, _b;
                var toastRef;
                var start = 0;
                var loadingContent = messages.loading || ((_a = _this._defaultConfig.loading) === null || _a === void 0 ? void 0 : _a.content);
                var errorContent = messages.error || ((_b = _this._defaultConfig.error) === null || _b === void 0 ? void 0 : _b.content);
                return rxjs.defer(function () {
                    if (loadingContent) {
                        toastRef = _this.createLoadingToast(loadingContent);
                        start = Date.now();
                    }
                    return source.pipe(operators.tap(Object.assign({ next: function (val) {
                            toastRef = _this.createOrUpdateToast(messages, val, toastRef, 'success', start === 0 ? start : Date.now() - start);
                        } }, (errorContent && {
                        error: function (e) {
                            toastRef = _this.createOrUpdateToast(messages, e, toastRef, 'error', start === 0 ? start : Date.now() - start);
                        },
                    }))));
                });
            };
        };
        /**
         * Closes the hot-toast
         *
         * @param [id] - ID of the toast
         * @since 3.0.1 - If ID is not provided, all toasts will be closed
         */
        HotToastService.prototype.close = function (id) {
            if (this._componentRef) {
                this._componentRef.ref.instance.closeToast(id);
            }
        };
        /**
         * Used for internal purpose only.
         * Creates a container component and attaches it to document.body.
         */
        HotToastService.prototype.init = function () {
            if (common.isPlatformServer(this.platformId)) {
                return;
            }
            this._componentRef = this._viewService
                .createComponent(HotToastContainerComponent)
                .setInput('defaultConfig', this._defaultConfig)
                .appendTo(document.body);
        };
        HotToastService.prototype.createOrUpdateToast = function (messages, val, toastRef, type, diff) {
            var _g;
            var content = null;
            var options = {};
            (_g = this.getContentAndOptions(type, messages[type] || (this._defaultConfig[type] ? this._defaultConfig[type].content : '')), content = _g.content, options = _g.options);
            content = resolveValueOrFunction(content, val);
            if (toastRef) {
                toastRef.updateMessage(content);
                var updatedOptions = Object.assign(Object.assign({ type: type, duration: diff + HOT_TOAST_DEFAULT_TIMEOUTS[type] }, options), (options.duration && { duration: diff + options.duration }));
                toastRef.updateToast(updatedOptions);
            }
            else {
                this.createToast(content, type, options);
            }
            return toastRef;
        };
        HotToastService.prototype.createToast = function (message, type, options, observableMessages) {
            var _a, _b, _c, _d, _e, _f;
            if (!this._isInitialized) {
                this._isInitialized = true;
                this.init();
            }
            var now = Date.now();
            var id = (_a = options === null || options === void 0 ? void 0 : options.id) !== null && _a !== void 0 ? _a : now.toString();
            if (!this.isDuplicate(id) &&
                (!((_b = options.persist) === null || _b === void 0 ? void 0 : _b.enabled) || (((_c = options.persist) === null || _c === void 0 ? void 0 : _c.enabled) && this.handleStorageValue(id, options)))) {
                var toast = Object.assign({ ariaLive: (_d = options === null || options === void 0 ? void 0 : options.ariaLive) !== null && _d !== void 0 ? _d : 'polite', createdAt: now, duration: (_e = options === null || options === void 0 ? void 0 : options.duration) !== null && _e !== void 0 ? _e : HOT_TOAST_DEFAULT_TIMEOUTS[type], id: id,
                    message: message, role: (_f = options === null || options === void 0 ? void 0 : options.role) !== null && _f !== void 0 ? _f : 'status', type: type, visible: true, observableMessages: observableMessages !== null && observableMessages !== void 0 ? observableMessages : undefined }, options);
                return new HotToastRef(toast).appendTo(this._componentRef.ref.instance);
            }
        };
        /**
         * Checks whether any toast with same id is present.
         *
         * @private
         * @param id - Toast ID
         */
        HotToastService.prototype.isDuplicate = function (id) {
            return this._componentRef.ref.instance.hasToast(id);
        };
        /**
         * Creates an entry in local or session storage with count ${defaultConfig.persist.count}, if not present.
         * If present in storage, reduces the count
         * and returns the count.
         * Count can not be less than 0.
         */
        HotToastService.prototype.handleStorageValue = function (id, options) {
            var count = 1;
            var persist = Object.assign(Object.assign({}, this._defaultPersistConfig), options.persist);
            var storage = persist.storage === 'local' ? localStorage : sessionStorage;
            var key = persist.key.replace(/\${id}/g, id);
            var item = storage.getItem(key);
            if (item) {
                item = parseInt(item, 10);
                if (item > 0) {
                    count = item - 1;
                }
                else {
                    count = item;
                }
            }
            else {
                count = persist.count;
            }
            storage.setItem(key, count.toString());
            return count;
        };
        HotToastService.prototype.getContentAndOptions = function (toastType, message) {
            var _a;
            var content;
            var options = Object.assign(Object.assign({}, this._defaultConfig), this._defaultConfig[toastType]);
            // typeof message === 'object' won't work, cz TemplateRef's type is object
            if (typeof message === 'string' || i1.isTemplateRef(message) || i1.isComponent(message)) {
                content = message;
            }
            else {
                var restOptions = void 0;
                (_a = message, (content = _a.content, _a), restOptions = __rest(_a, ["content"]));
                options = Object.assign(Object.assign({}, options), restOptions);
            }
            return { content: content, options: options };
        };
        HotToastService.prototype.createLoadingToast = function (messages) {
            var _g;
            var content = null;
            var options = {};
            (_g = this.getContentAndOptions('loading', messages), content = _g.content, options = _g.options);
            return this.loading(content, options);
        };
        return HotToastService;
    }());
    HotToastService.ɵprov = i0.ɵɵdefineInjectable({ factory: function HotToastService_Factory() { return new HotToastService(i0.ɵɵinject(i1.ViewService), i0.ɵɵinject(i0.PLATFORM_ID), i0.ɵɵinject(ToastConfig, 8)); }, token: HotToastService, providedIn: "root" });
    HotToastService.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    HotToastService.ctorParameters = function () { return [
        { type: i1.ViewService },
        { type: String, decorators: [{ type: i0.Inject, args: [i0.PLATFORM_ID,] }] },
        { type: ToastConfig, decorators: [{ type: i0.Optional }] }
    ]; };

    var AnimatedIconComponent = /** @class */ (function () {
        function AnimatedIconComponent() {
        }
        return AnimatedIconComponent;
    }());
    AnimatedIconComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'hot-toast-animated-icon',
                    template: "<div class=\"hot-toast-animated-icon\" [style.color]=\"iconTheme?.primary\">\n  <ng-content></ng-content>\n</div>\n",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    styles: ["@keyframes hotToastEnter{0%{transform:scale(0)}to{transform:scale(1)}}.hot-toast-animated-icon{animation:var(--hot-toast-animated-icon-animation,hotToastEnter .3s ease-in-out forwards);position:var(--hot-toast-animated-icon-position,relative);transform:var(--hot-toast-animated-icon-transform,scale(0))}@media (prefers-reduced-motion:reduce){.hot-toast-animated-icon{animation-duration:var(--hot-toast-animated-icon-reduced-motion-animation-duration,none);opacity:var(--hot-toast-animated-icon-reduced-motion-opacity,1);transform:var(--hot-toast-animated-icon-reduced-motion-transform,scale(1))}}"]
                },] }
    ];
    AnimatedIconComponent.propDecorators = {
        iconTheme: [{ type: i0.Input }]
    };

    var CheckMarkComponent = /** @class */ (function () {
        function CheckMarkComponent() {
        }
        return CheckMarkComponent;
    }());
    CheckMarkComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'hot-toast-checkmark',
                    template: "<div\n  class=\"hot-toast-checkmark-icon\"\n  [style.--check-primary]=\"theme?.primary\"\n  [style.--check-secondary]=\"theme?.secondary\"\n></div>\n",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    styles: ["@keyframes hotToastCircleAnimation{0%{opacity:0;transform:scale(0) rotate(45deg)}to{opacity:1;transform:scale(1) rotate(45deg)}}@keyframes hotToastCheckmarkAnimation{0%{height:0;opacity:0;width:0}40%{height:0;opacity:1;width:6px}to{height:10px;opacity:1}}.hot-toast-checkmark-icon{animation:var(--hot-toast-checkmark-icon-animation,hotToastCircleAnimation .3s cubic-bezier(.175,.885,.32,1.275) forwards);animation-delay:var(--hot-toast-checkmark-icon-animation-delay,.1s);background-color:var(--hot-toast-checkmark-icon-background-color,var(--check-primary,#61d345));border-radius:var(--hot-toast-checkmark-icon-border-radius,10px);height:var(--hot-toast-checkmark-icon-height,20px);opacity:var(--hot-toast-checkmark-icon-opacity,0);position:var(--hot-toast-checkmark-icon-position,relative);transform:var(--hot-toast-checkmark-icon-transform,rotate(45deg));width:var(--hot-toast-checkmark-icon-width,20px)}@media (prefers-reduced-motion:reduce){.hot-toast-checkmark-icon{animation-duration:var(--hot-toast-checkmark-icon-reduced-motion-animation-duration,0ms)}}.hot-toast-checkmark-icon:after{animation:var(--hot-toast-checkmark-icon-after-animation,hotToastCheckmarkAnimation .2s ease-out forwards);animation-delay:var(--hot-toast-checkmark-icon-after-animation-delay,.2s);border-bottom:var(--hot-toast-checkmark-icon-after-border-bottom,2px) solid var(--hot-toast-checkmark-icon-after-border-color,var(--check-secondary,#fff));border-left-color:var(--hot-toast-checkmark-icon-after-border-color,var(--check-secondary,#fff));border-right:var(--hot-toast-checkmark-icon-after-border-right,2px) solid var(--hot-toast-checkmark-icon-after-border-color,var(--check-secondary,#fff));border-top-color:var(--hot-toast-checkmark-icon-after-border-color,var(--check-secondary,#fff));bottom:var(--hot-toast-checkmark-icon-after-bottom,6px);box-sizing:var(--hot-toast-checkmark-icon-after-box-sizing,border-box);content:var(--hot-toast-checkmark-icon-after-content,\"\");height:var(--hot-toast-checkmark-icon-after-height,10px);left:var(--hot-toast-checkmark-icon-after-left,6px);opacity:var(--hot-toast-checkmark-icon-after-opacity,0);position:var(--hot-toast-checkmark-icon-after-position,absolute);width:var(--hot-toast-checkmark-icon-after-width,6px)}@media (prefers-reduced-motion:reduce){.hot-toast-checkmark-icon:after{animation-duration:var(--hot-toast-checkmark-icon-after-reduced-motion-animation-duration,0ms)}}"]
                },] }
    ];
    CheckMarkComponent.propDecorators = {
        theme: [{ type: i0.Input }]
    };

    var ErrorComponent = /** @class */ (function () {
        function ErrorComponent() {
        }
        return ErrorComponent;
    }());
    ErrorComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'hot-toast-error',
                    template: "<div\n  class=\"hot-toast-error-icon\"\n  [style.--error-primary]=\"theme?.primary\"\n  [style.--error-secondary]=\"theme?.secondary\"\n></div>\n",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    styles: ["@keyframes hotToastErrorCircleAnimation{0%{opacity:0;transform:scale(0) rotate(45deg)}to{opacity:1;transform:scale(1) rotate(45deg)}}@keyframes hotToastFirstLineAnimation{0%{opacity:0;transform:scale(0)}to{opacity:1;transform:scale(1)}}@keyframes hotToastSecondLineAnimation{0%{opacity:0;transform:scale(0) rotate(90deg)}to{opacity:1;transform:scale(1) rotate(90deg)}}.hot-toast-error-icon{animation:var(--hot-toast-error-icon-animation,hotToastErrorCircleAnimation .3s cubic-bezier(.175,.885,.32,1.275) forwards);animation-delay:var(--hot-toast-error-icon-animation-delay,.1s);background:var(--hot-toast-error-icon-background,var(--error-primary,#ff4b4b));border-radius:var(--hot-toast-error-icon-border-radius,10px);height:var(--hot-toast-error-icon-height,20px);opacity:var(--hot-toast-error-icon-opacity,0);position:var(--hot-toast-error-icon-position,relative);transform:var(--hot-toast-error-icon-transform,rotate(45deg));width:var(--hot-toast-error-icon-width,20px)}@media (prefers-reduced-motion:reduce){.hot-toast-error-icon{animation-duration:var(--hot-toast-error-icon-reduced-motion-animation-duration,0ms)}}.hot-toast-error-icon:after,.hot-toast-error-icon:before{animation:var(--hot-toast-error-icon-after-before-animation,hotToastFirstLineAnimation .15s ease-out forwards);animation-delay:var(--hot-toast-error-icon-after-before-animation-delay,.15s);background:var(--hot-toast-error-icon-after-before-background,var(--error-secondary,#fff));border-radius:var(--hot-toast-error-icon-after-before-border-radius,3px);bottom:var(--hot-toast-error-icon-after-before-bottom,9px);content:var(--hot-toast-error-icon-after-before-content,\"\");height:var(--hot-toast-error-icon-after-before-height,2px);left:var(--hot-toast-error-icon-after-before-left,4px);opacity:var(--hot-toast-error-icon-after-before-opacity,0);position:var(--hot-toast-error-icon-after-before-position,absolute);width:var(--hot-toast-error-icon-after-before-width,12px)}@media (prefers-reduced-motion:reduce){.hot-toast-error-icon:after,.hot-toast-error-icon:before{animation-duration:var(--hot-toast-error-icon-after-before-reduced-motion-animation-duration,0ms)}}.hot-toast-error-icon:before{animation:var(--hot-toast-error-icon-before-animation,hotToastSecondLineAnimation .15s ease-out forwards);animation-delay:var(--hot-toast-error-icon-before-animation-delay,.18s);transform:var(--hot-toast-error-icon-before-transform,rotate(90deg))}@media (prefers-reduced-motion:reduce){.hot-toast-error-icon:before{animation-duration:var(--hot-toast-error-icon-before-reduced-motion-animation-duration,0ms)}}"]
                },] }
    ];
    ErrorComponent.propDecorators = {
        theme: [{ type: i0.Input }]
    };

    var LoaderComponent = /** @class */ (function () {
        function LoaderComponent() {
        }
        return LoaderComponent;
    }());
    LoaderComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'hot-toast-loader',
                    template: "<div\n  class=\"hot-toast-loader-icon\"\n  [ngStyle]=\"{ 'border-color': theme?.primary, 'border-right-color': theme?.secondary }\"\n></div>\n",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    styles: ["@keyframes hotToastRotate{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.hot-toast-loader-icon{animation:var(--hot-toast-loader-icon-animation,hotToastRotate 1s linear infinite);border:var(--hot-toast-loader-icon-border,2px solid);border-color:var(--hot-toast-loader-icon-border-color,#e0e0e0) var(--hot-toast-loader-icon-border-right-color,#616161) var(--hot-toast-loader-icon-border-color,#e0e0e0) var(--hot-toast-loader-icon-border-color,#e0e0e0);border-radius:var(--hot-toast-loader-icon-border-radius,100%);box-sizing:var(--hot-toast-loader-icon-box-sizing,border-box);height:var(--hot-toast-loader-icon-height,18px);padding-top:var(--hot-toast-loader-icon-padding-top,2px);width:var(--hot-toast-loader-icon-width,18px)}@media (prefers-reduced-motion:reduce){.hot-toast-loader-icon{animation-duration:var(--hot-toast-loader-icon-reduced-motion-animation-duration,5s)}}"]
                },] }
    ];
    LoaderComponent.propDecorators = {
        theme: [{ type: i0.Input }]
    };

    var IndicatorComponent = /** @class */ (function () {
        function IndicatorComponent() {
        }
        return IndicatorComponent;
    }());
    IndicatorComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'hot-toast-indicator',
                    template: "<ng-container *ngIf=\"type !== 'blank'\">\n  <div class=\"hot-toast-indicator-wrapper\">\n    <hot-toast-loader [theme]=\"theme\"></hot-toast-loader>\n    <ng-container *ngIf=\"type !== 'loading'\">\n      <div class=\"hot-toast-status-wrapper\">\n        <div [ngSwitch]=\"type\">\n          <div *ngSwitchCase=\"'error'\">\n            <hot-toast-error [theme]=\"theme\"></hot-toast-error>\n          </div>\n          <div *ngSwitchCase=\"'success'\">\n            <hot-toast-checkmark [theme]=\"theme\"></hot-toast-checkmark>\n          </div>\n          <div *ngSwitchCase=\"'warning'\">\n            <hot-toast-warning [theme]=\"theme\"></hot-toast-warning>\n          </div>\n          <div *ngSwitchCase=\"'info'\">\n            <hot-toast-info [theme]=\"theme\"></hot-toast-info>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</ng-container>\n",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    styles: [".hot-toast-indicator-wrapper{align-items:var(--hot-toast-indicator-wrapper-align-items,center);display:var(--hot-toast-indicator-wrapper-display,flex);justify-content:var(--hot-toast-indicator-wrapper-justify-content,center);min-height:var(--hot-toast-indicator-wrapper-min-height,20px);min-width:var(--hot-toast-indicator-wrapper-min-width,20px);position:var(--hot-toast-indicator-wrapper-position,relative)}.hot-toast-status-wrapper{position:var(--hot-toast-status-wrapper-position,absolute)}"]
                },] }
    ];
    IndicatorComponent.propDecorators = {
        theme: [{ type: i0.Input }],
        type: [{ type: i0.Input }]
    };

    var WarningComponent = /** @class */ (function () {
        function WarningComponent() {
        }
        return WarningComponent;
    }());
    WarningComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'hot-toast-warning',
                    template: "<div\n  class=\"hot-toast-warning-icon\"\n  [style.--warn-primary]=\"theme?.primary\"\n  [style.--warn-secondary]=\"theme?.secondary\"\n></div>\n",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    styles: ["@keyframes animate-warn-background{0%{opacity:0;transform:scale(0)}to{opacity:1;transform:scale(1)}}@keyframes animate-warn-line{0%{height:0;opacity:0}40%{height:4.8px;opacity:1}to{height:8px;opacity:1}}.hot-toast-warning-icon{animation:var(--hot-toast-warning-icon-animation,animate-warn-background .3s cubic-bezier(.175,.885,.32,1.275) forwards);animation-delay:var(--hot-toast-warning-icon-animation-delay,.1s);background-color:var(--hot-toast-warning-icon-background-color,var(--warn-primary,#ffab00));border-radius:var(--hot-toast-warning-icon-border-radius,50%);display:var(--hot-toast-warning-icon-display,block);height:var(--hot-toast-warning-icon-height,20px);opacity:var(--hot-toast-warning-icon-opacity,0);position:var(--hot-toast-warning-icon-position,relative);transform:var(--hot-toast-warning-icon-transform,scale(0));width:var(--hot-toast-warning-icon-width,20px)}.hot-toast-warning-icon:after,.hot-toast-warning-icon:before{background-color:var(--hot-toast-warning-icon-after-before-background-color,var(--warn-secondary,#fff));border-radius:var(--hot-toast-warning-icon-after-before-border-radius,3px);box-sizing:var(--hot-toast-warning-icon-after-before-box-sizing,border-box);content:var(--hot-toast-warning-icon-after-before-content,\"\");display:var(--hot-toast-warning-icon-after-before-display,block);left:var(--hot-toast-warning-icon-after-before-left,8.5px);position:var(--hot-toast-warning-icon-after-before-position,absolute);width:var(--hot-toast-warning-icon-after-before-width,2.5px)}.hot-toast-warning-icon:after{animation:var(--hot-toast-warning-icon-after-animation,animate-warn-line .2s ease-out forwards);animation-delay:var(--hot-toast-warning-icon-after-animation-delay,.2s);height:var(--hot-toast-warning-icon-after-height,0);opacity:var(--hot-toast-warning-icon-after-opacity,0);top:var(--hot-toast-warning-icon-after-top,4px)}.hot-toast-warning-icon:before{bottom:var(--hot-toast-warning-icon-before-bottom,4px);height:var(--hot-toast-warning-icon-before-height,2px)}"]
                },] }
    ];
    WarningComponent.propDecorators = {
        theme: [{ type: i0.Input }]
    };

    var InfoComponent = /** @class */ (function () {
        function InfoComponent() {
        }
        return InfoComponent;
    }());
    InfoComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'hot-toast-info',
                    template: "<div\n  class=\"hot-toast-info-icon\"\n  [style.--warn-primary]=\"theme?.primary\"\n  [style.--warn-secondary]=\"theme?.secondary\"\n></div>\n",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    styles: ["@keyframes animate-info-background{0%{opacity:0;transform:scale(0)}to{opacity:1;transform:scale(1)}}@keyframes animate-info-line{0%{height:0;opacity:0}40%{height:4.8px;opacity:1}to{height:8px;opacity:1}}.hot-toast-info-icon{animation:var(--hot-toast-info-icon-animation,animate-info-background .3s cubic-bezier(.175,.885,.32,1.275) forwards);animation-delay:var(--hot-toast-info-icon-animation-delay,.1s);background-color:var(--hot-toast-info-icon-background-color,var(--info-primary,#0d6efd));border-radius:var(--hot-toast-info-icon-border-radius,50%);display:var(--hot-toast-info-icon-display,block);height:var(--hot-toast-info-icon-height,20px);opacity:var(--hot-toast-info-icon-opacity,0);position:var(--hot-toast-info-icon-position,relative);transform:var(--hot-toast-info-icon-transform,scale(0));width:var(--hot-toast-info-icon-width,20px)}.hot-toast-info-icon:after,.hot-toast-info-icon:before{background-color:var(--hot-toast-info-icon-after-before-background-color,var(--info-secondary,#fff));border-radius:var(--hot-toast-info-icon-after-before-border-radius,3px);box-sizing:var(--hot-toast-info-icon-after-before-box-sizing,border-box);content:var(--hot-toast-info-icon-after-before-content,\"\");display:var(--hot-toast-info-icon-after-before-display,block);left:var(--hot-toast-info-icon-after-before-left,8.5px);position:var(--hot-toast-info-icon-after-before-position,absolute);width:var(--hot-toast-info-icon-after-before-width,2.5px)}.hot-toast-info-icon:after{animation:var(--hot-toast-info-icon-after-animation,animate-info-line .2s ease-out forwards);animation-delay:var(--hot-toast-info-icon-after-animation-delay,.2s);height:var(--hot-toast-info-icon-after-height,0);opacity:var(--hot-toast-info-icon-after-opacity,0);top:var(--hot-toast-info-icon-after-bottom,8px)}.hot-toast-info-icon:before{height:var(--hot-toast-info-icon-before-height,2px);top:var(--hot-toast-info-icon-before-top,4px)}"]
                },] }
    ];
    InfoComponent.propDecorators = {
        theme: [{ type: i0.Input }]
    };

    var HotToastModule = /** @class */ (function () {
        function HotToastModule() {
        }
        HotToastModule.forRoot = function (config) {
            return {
                ngModule: HotToastModule,
                providers: [{ provide: ToastConfig, useValue: config }],
            };
        };
        return HotToastModule;
    }());
    HotToastModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        HotToastContainerComponent,
                        HotToastComponent,
                        AnimatedIconComponent,
                        IndicatorComponent,
                        CheckMarkComponent,
                        ErrorComponent,
                        LoaderComponent,
                        WarningComponent,
                        InfoComponent,
                    ],
                    imports: [common.CommonModule, i1.DynamicViewModule],
                    entryComponents: [HotToastContainerComponent],
                },] }
    ];

    /*
     * Public API Surface of hot-toast
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.HotToastModule = HotToastModule;
    exports.HotToastRef = HotToastRef;
    exports.HotToastService = HotToastService;
    exports.ToastConfig = ToastConfig;
    exports.ToastPersistConfig = ToastPersistConfig;
    exports.resolveValueOrFunction = resolveValueOrFunction;
    exports.ɵ0 = ɵ0;
    exports.ɵa = HotToastContainerComponent;
    exports.ɵb = HotToastComponent;
    exports.ɵc = AnimatedIconComponent;
    exports.ɵd = IndicatorComponent;
    exports.ɵe = CheckMarkComponent;
    exports.ɵf = ErrorComponent;
    exports.ɵg = LoaderComponent;
    exports.ɵh = WarningComponent;
    exports.ɵi = InfoComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngneat-hot-toast.umd.js.map
