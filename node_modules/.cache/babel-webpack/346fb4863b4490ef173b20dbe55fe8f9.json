{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport Swal from 'sweetalert2'; // import { FormBuilder, FormGroup } from '@angular/forms';\n\nlet ListeCondidatComponent = class ListeCondidatComponent {\n  constructor(condidatService, authService, toast) {\n    this.condidatService = condidatService;\n    this.authService = authService;\n    this.toast = toast;\n    this.elm = HTMLElement;\n    this.date = ''; // emailSubject: string = '';\n\n    this.customDescription = '';\n    this.condidat = [];\n    this.role = localStorage.getItem('role');\n  }\n\n  ngOnInit() {\n    this.authService.role.subscribe(res => {\n      this.role = res;\n    });\n    this.getAll();\n  }\n\n  getAll() {\n    console.log(this.role);\n\n    if (this.role == 'Condidat') {\n      console.log(\"ok\");\n      this.condidatService.getCondidatByUser(localStorage.getItem('id')).subscribe(res => {\n        console.log(res);\n        this.condidat = res.data;\n        console.log(this.condidat);\n      });\n    } else if (this.role == 'Employeur') {\n      console.log(\"get by company\");\n      this.condidatService.getCondidatByCompany(localStorage.getItem('id')).subscribe(res => {\n        console.log(res);\n        this.condidat = res.data;\n        console.log(\"condidt\", this.condidat);\n      });\n    }\n  }\n\n  onSelected(e, id) {\n    console.log(id);\n    this.idc = id;\n    let value = {\n      value: e.target.value\n    };\n    this.status = e.target.value;\n\n    if (this.status !== \"Présélectionne\") {\n      this.condidatService.updateStatusR(id, value).subscribe(res => {\n        this.toast.success('Modifier avec succès!!');\n        this.getAll();\n      });\n    } else {\n      this.id = id;\n      this.open();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.elm = this.myModal.nativeElement;\n  }\n\n  close() {\n    this.elm.classList.remove('show');\n    setTimeout(() => {\n      this.elm.style.width = '0';\n    }, 75);\n  }\n\n  open() {\n    var _a;\n\n    (_a = this.elm.classList) === null || _a === void 0 ? void 0 : _a.add('show');\n    this.elm.style.width = '100vw';\n  } // send(){\n  //   if(this.date!=''){\n  //     console.log(\"idc\",this.idc)\n  //     console.log(\"date\",this.date)\n  //   this.condidatService.updateStatus(this.idc,this.date).subscribe(res=>{\n  //     this.toast.success('Modifier avec succes!!');\n  //     this.getAll()\n  //     this.close()\n  //    this.date=''\n  //   })\n  // }else{\n  //   this.toast.error('Selectionne date d\\'entretient!!');\n  // }\n  // }\n\n\n  send() {\n    if (this.date !== '') {\n      console.log(\"idc\", this.idc);\n      console.log(\"description\", this.description);\n      console.log(\"date\", this.date);\n      console.log(\"emailSubject\", this.emailSubject); // Utilisez this.customDescription au lieu de this.description\n\n      this.condidatService.updateStatus(this.idc, this.date, this.customDescription, this.emailSubject).subscribe(res => {\n        this.toast.success('Modifier avec succès!!');\n        this.getAll();\n        this.close();\n        this.date = '';\n        this.emailSubject = '';\n        this.customDescription = ''; // Réinitialisez customDescription après l'envoi\n      });\n    } else {\n      this.toast.error(\"Sélectionnez une date d'entretien!!\");\n    }\n  } // async send() {\n  //   emailjs.init('ggMxHTccbD41GbUPr')\n  // // let response =await emailjs.send(\"service_iu691xn\",\"template_r50a4dp\",{\n  // //   to_name: this.form.value.to_name,\n  // //   from_email: this.form.value.from_email,\n  // //   subject: this.form.value.subject,\n  // //   message: this.form.value.message,\n  // //   });\n  // emailjs.send(\"service_iu691xn\",\"template_06re3k9\",{\n  //   from_name: this.form.value.from_name,\n  //   to_name: this.form.value.to_name,\n  //   subject: this.form.value.subject,\n  //   message: this.form.value.message,\n  //   from_email: this.form.value.from_email,\n  //   to_email: this.form.value.to_email,\n  //   });\n  //   alert('message envoyer avec succé .');\n  //   this.form.reset();\n  // }\n\n\n  response(id) {\n    Swal.fire({\n      title: 'Souhaitez-vous confirmer le candidat?',\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: 'Confirmer',\n      denyButtonText: `Refuser`\n    }).then(result => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        this.condidatService.sendRequest(id, this.date).subscribe(res => {\n          Swal.fire('Accepter!', '', 'success');\n        });\n      } else if (result.isDenied) {\n        Swal.fire('Candidat refuse', '', 'info');\n      }\n    });\n  }\n\n};\n\n__decorate([ViewChild('content', {\n  static: false\n})], ListeCondidatComponent.prototype, \"el\", void 0);\n\n__decorate([ViewChild('myModal', {\n  static: false\n})], ListeCondidatComponent.prototype, \"myModal\", void 0);\n\nListeCondidatComponent = __decorate([Component({\n  selector: 'app-liste-condidat',\n  templateUrl: './liste-condidat.component.html',\n  styleUrls: ['./liste-condidat.component.css']\n})], ListeCondidatComponent);\nexport { ListeCondidatComponent };","map":{"version":3,"sources":["/home/wassef/Bureau/lastversion/frontend/src/app/pages/mon-espace/liste-condidat/liste-condidat.component.ts"],"names":["__decorate","Component","ViewChild","Swal","ListeCondidatComponent","constructor","condidatService","authService","toast","elm","HTMLElement","date","customDescription","condidat","role","localStorage","getItem","ngOnInit","subscribe","res","getAll","console","log","getCondidatByUser","data","getCondidatByCompany","onSelected","e","id","idc","value","target","status","updateStatusR","success","open","ngAfterViewInit","myModal","nativeElement","close","classList","remove","setTimeout","style","width","_a","add","send","description","emailSubject","updateStatus","error","response","fire","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","sendRequest","isDenied","static","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport Swal from 'sweetalert2';\n// import { FormBuilder, FormGroup } from '@angular/forms';\nlet ListeCondidatComponent = class ListeCondidatComponent {\n    constructor(condidatService, authService, toast) {\n        this.condidatService = condidatService;\n        this.authService = authService;\n        this.toast = toast;\n        this.elm = HTMLElement;\n        this.date = '';\n        // emailSubject: string = '';\n        this.customDescription = '';\n        this.condidat = [];\n        this.role = localStorage.getItem('role');\n    }\n    ngOnInit() {\n        this.authService.role.subscribe(res => {\n            this.role = res;\n        });\n        this.getAll();\n    }\n    getAll() {\n        console.log(this.role);\n        if (this.role == 'Condidat') {\n            console.log(\"ok\");\n            this.condidatService.getCondidatByUser(localStorage.getItem('id')).subscribe(res => {\n                console.log(res);\n                this.condidat = res.data;\n                console.log(this.condidat);\n            });\n        }\n        else if (this.role == 'Employeur') {\n            console.log(\"get by company\");\n            this.condidatService.getCondidatByCompany(localStorage.getItem('id')).subscribe(res => {\n                console.log(res);\n                this.condidat = res.data;\n                console.log(\"condidt\", this.condidat);\n            });\n        }\n    }\n    onSelected(e, id) {\n        console.log(id);\n        this.idc = id;\n        let value = {\n            value: e.target.value\n        };\n        this.status = e.target.value;\n        if (this.status !== \"Présélectionne\") {\n            this.condidatService.updateStatusR(id, value).subscribe(res => {\n                this.toast.success('Modifier avec succès!!');\n                this.getAll();\n            });\n        }\n        else {\n            this.id = id;\n            this.open();\n        }\n    }\n    ngAfterViewInit() {\n        this.elm = this.myModal.nativeElement;\n    }\n    close() {\n        this.elm.classList.remove('show');\n        setTimeout(() => {\n            this.elm.style.width = '0';\n        }, 75);\n    }\n    open() {\n        var _a;\n        (_a = this.elm.classList) === null || _a === void 0 ? void 0 : _a.add('show');\n        this.elm.style.width = '100vw';\n    }\n    // send(){\n    //   if(this.date!=''){\n    //     console.log(\"idc\",this.idc)\n    //     console.log(\"date\",this.date)\n    //   this.condidatService.updateStatus(this.idc,this.date).subscribe(res=>{\n    //     this.toast.success('Modifier avec succes!!');\n    //     this.getAll()\n    //     this.close()\n    //    this.date=''\n    //   })\n    // }else{\n    //   this.toast.error('Selectionne date d\\'entretient!!');\n    // }\n    // }\n    send() {\n        if (this.date !== '') {\n            console.log(\"idc\", this.idc);\n            console.log(\"description\", this.description);\n            console.log(\"date\", this.date);\n            console.log(\"emailSubject\", this.emailSubject);\n            // Utilisez this.customDescription au lieu de this.description\n            this.condidatService.updateStatus(this.idc, this.date, this.customDescription, this.emailSubject).subscribe(res => {\n                this.toast.success('Modifier avec succès!!');\n                this.getAll();\n                this.close();\n                this.date = '';\n                this.emailSubject = '';\n                this.customDescription = ''; // Réinitialisez customDescription après l'envoi\n            });\n        }\n        else {\n            this.toast.error(\"Sélectionnez une date d'entretien!!\");\n        }\n    }\n    // async send() {\n    //   emailjs.init('ggMxHTccbD41GbUPr')\n    // // let response =await emailjs.send(\"service_iu691xn\",\"template_r50a4dp\",{\n    // //   to_name: this.form.value.to_name,\n    // //   from_email: this.form.value.from_email,\n    // //   subject: this.form.value.subject,\n    // //   message: this.form.value.message,\n    // //   });\n    // emailjs.send(\"service_iu691xn\",\"template_06re3k9\",{\n    //   from_name: this.form.value.from_name,\n    //   to_name: this.form.value.to_name,\n    //   subject: this.form.value.subject,\n    //   message: this.form.value.message,\n    //   from_email: this.form.value.from_email,\n    //   to_email: this.form.value.to_email,\n    //   });\n    //   alert('message envoyer avec succé .');\n    //   this.form.reset();\n    // }\n    response(id) {\n        Swal.fire({\n            title: 'Souhaitez-vous confirmer le candidat?',\n            showDenyButton: true,\n            showCancelButton: true,\n            confirmButtonText: 'Confirmer',\n            denyButtonText: `Refuser`,\n        }).then((result) => {\n            /* Read more about isConfirmed, isDenied below */\n            if (result.isConfirmed) {\n                this.condidatService.sendRequest(id, this.date).subscribe(res => {\n                    Swal.fire('Accepter!', '', 'success');\n                });\n            }\n            else if (result.isDenied) {\n                Swal.fire('Candidat refuse', '', 'info');\n            }\n        });\n    }\n};\n__decorate([\n    ViewChild('content', { static: false })\n], ListeCondidatComponent.prototype, \"el\", void 0);\n__decorate([\n    ViewChild('myModal', { static: false })\n], ListeCondidatComponent.prototype, \"myModal\", void 0);\nListeCondidatComponent = __decorate([\n    Component({\n        selector: 'app-liste-condidat',\n        templateUrl: './liste-condidat.component.html',\n        styleUrls: ['./liste-condidat.component.css']\n    })\n], ListeCondidatComponent);\nexport { ListeCondidatComponent };\n"]},"metadata":{},"sourceType":"module"}